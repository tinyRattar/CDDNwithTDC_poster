[05-10  22:50:28] DataParallel(
  (module): RDN_complex(
    (layerList): ModuleList(
      (0): RDN_recursionUnit(
        (LRelu): LeakyReLU(negative_slope=0.01)
        (conv1): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (dilateBlock): dilatedConvBlock(
          (LRelu): LeakyReLU(negative_slope=0.01)
          (layerList): ModuleList(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
            (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
          )
        )
        (conv2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): dataFidelityUnit()
      (2): RDN_recursionUnit(
        (LRelu): LeakyReLU(negative_slope=0.01)
        (conv1): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (dilateBlock): dilatedConvBlock(
          (LRelu): LeakyReLU(negative_slope=0.01)
          (layerList): ModuleList(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
            (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
          )
        )
        (conv2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (3): dataFidelityUnit()
      (4): RDN_recursionUnit(
        (LRelu): LeakyReLU(negative_slope=0.01)
        (conv1): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (dilateBlock): dilatedConvBlock(
          (LRelu): LeakyReLU(negative_slope=0.01)
          (layerList): ModuleList(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
            (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
          )
        )
        (conv2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (5): dataFidelityUnit()
      (6): RDN_recursionUnit(
        (LRelu): LeakyReLU(negative_slope=0.01)
        (conv1): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (dilateBlock): dilatedConvBlock(
          (LRelu): LeakyReLU(negative_slope=0.01)
          (layerList): ModuleList(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
            (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
          )
        )
        (conv2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): dataFidelityUnit()
      (8): RDN_recursionUnit(
        (LRelu): LeakyReLU(negative_slope=0.01)
        (conv1): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (dilateBlock): dilatedConvBlock(
          (LRelu): LeakyReLU(negative_slope=0.01)
          (layerList): ModuleList(
            (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
            (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
          )
        )
        (conv2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (9): dataFidelityUnit()
    )
  )
)
